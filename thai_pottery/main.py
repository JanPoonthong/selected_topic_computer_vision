import torchimport cv2import numpy as npimport matplotlib.pyplot as pltfrom PIL import Imagefrom torchvision.transforms import Compose, Resize, ToTensor, Normalize# Step 1: Load the MiDaS depth estimation modelmodel_type = "DPT_Large"  # MiDaS model type (can be DPT_Large, DPT_Hybrid, etc.)# Download the pre-trained MiDaS modelmidas = torch.hub.load("intel-isl/MiDaS", model_type, pretrained=True)# Set the model to evaluation modemidas.eval()# Step 2: Load and transform the input imagedef load_image(image_path):    input_image = Image.open(image_path)    transform = Compose([        Resize(384),  # Resize image to model input size        ToTensor(),        Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),    ])    input_tensor = transform(input_image).unsqueeze(0)    return input_tensor# Step 3: Perform depth estimationdef estimate_depth(image_path):    # Load and transform image    input_tensor = load_image(image_path)    # Make depth prediction    with torch.no_grad():        prediction = midas(input_tensor)    # Convert depth map to a numpy array    depth_map = prediction.squeeze().cpu().numpy()    return depth_map# Step 4: Save the depth map as a grayscale imagedef save_depth_map_as_image(depth_map, output_path):    # Use matplotlib to save the depth map as a grayscale image    plt.imsave(output_path, depth_map, cmap='gray')# Step 5: Visualize the depth mapdef visualize_depth_map(depth_map):    plt.imshow(depth_map, cmap='plasma')    plt.colorbar()    plt.title("Estimated Depth Map")    plt.show()# Main functionif __name__ == "__main__":    # Provide the path to your pottery image    image_path = "/Users/janpoonthong/University/Year-3/Semester-1/selected_topic_in_computer_vision/thai_pottery/thai_pottery_traning_data/image1.jpg"        # Estimate the depth of the image    depth_map = estimate_depth(image_path)    # Save the depth map as a grayscale image    output_path = "/Users/janpoonthong/University/Year-3/Semester-1/selected_topic_in_computer_vision/thai_pottery/depth_map.png"    save_depth_map_as_image(depth_map, output_path)    # Visualize the depth map    visualize_depth_map(depth_map)