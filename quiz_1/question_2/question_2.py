import cv2import numpy as npimport matplotlib.pyplot as plt# Load your actual grayscale imagegrayscale_image = cv2.imread('/Users/janpoonthong/Pictures/jan/jan_classroom_greyscale.png', cv2.IMREAD_GRAYSCALE)# Perform direct Fourier transformdft = np.fft.fft2(grayscale_image)dft_shift = np.fft.fftshift(dft)# Get the magnitude spectrummagnitude_spectrum = 20 * np.log(np.abs(dft_shift))# Display the original magnitude spectrumplt.figure(figsize=(12, 6))plt.subplot(1, 2, 1)plt.imshow(grayscale_image, cmap='gray')plt.title('Original Grayscale Image')plt.axis('off')plt.subplot(1, 2, 2)plt.imshow(magnitude_spectrum, cmap='gray')plt.title('Original Magnitude Spectrum')plt.axis('off')plt.show()# Reduce by 75% the magnitude of the frequency component at the originrows, cols = grayscale_image.shapecrow, ccol = rows // 2 , cols // 2 # centerdft_shift[crow, ccol] *= 0.25# Get the modified magnitude spectrummodified_magnitude_spectrum = 20 * np.log(np.abs(dft_shift))# Perform inverse Fourier transform onto the modified spectrumdft_ishift = np.fft.ifftshift(dft_shift)img_back = np.fft.ifft2(dft_ishift)img_back = np.abs(img_back)# Display the modified magnitude spectrum and the reconstructed imageplt.figure(figsize=(12, 6))plt.subplot(1, 2, 1)plt.imshow(modified_magnitude_spectrum, cmap='gray')plt.title('Modified Magnitude Spectrum')plt.axis('off')plt.subplot(1, 2, 2)plt.imshow(img_back, cmap='gray')plt.title('Reconstructed Image')plt.axis('off')plt.show()# Compare the original and modified images side by sideplt.figure(figsize=(12, 6))plt.subplot(1, 2, 1)plt.imshow(grayscale_image, cmap='gray')plt.title('Original Image')plt.axis('off')plt.subplot(1, 2, 2)plt.imshow(img_back, cmap='gray')plt.title('Modified Image')plt.axis('off')plt.show()